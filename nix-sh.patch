--- nix-2.9.2/configure.ac.orig	2022-07-04 22:48:50.076117019 +0200
+++ nix-2.9.2/configure.ac	2022-07-05 21:31:45.863099554 +0200
@@ -259,10 +259,10 @@ AC_SUBST(ENABLE_S3, [$enable_s3])
 AC_LANG_POP(C++)
 
 if test -n "$enable_s3"; then
-  declare -a aws_version_tokens=($(printf '#include <aws/core/VersionConfig.h>\nAWS_SDK_VERSION_STRING' | $CPP $CPPFLAGS - | grep -v '^#.*' | sed 's/"//g' | tr '.' ' '))
-  AC_DEFINE_UNQUOTED([AWS_VERSION_MAJOR], ${aws_version_tokens@<:@0@:>@}, [Major version of aws-sdk-cpp.])
-  AC_DEFINE_UNQUOTED([AWS_VERSION_MINOR], ${aws_version_tokens@<:@1@:>@}, [Minor version of aws-sdk-cpp.])
-  AC_DEFINE_UNQUOTED([AWS_VERSION_PATCH], ${aws_version_tokens@<:@2@:>@}, [Patch version of aws-sdk-cpp.])
+  aws_version="$(printf '#include <aws/core/VersionConfig.h>\nAWS_SDK_VERSION_STRING' | $CPP $CPPFLAGS - | grep -v '^#.*' | sed 's/"//g')"
+  AC_DEFINE_UNQUOTED([AWS_VERSION_MAJOR], $(echo "$aws_version" | cut -d. -f1), [Major version of aws-sdk-cpp.])
+  AC_DEFINE_UNQUOTED([AWS_VERSION_MINOR], $(echo "$aws_version" | cut -d. -f2), [Minor version of aws-sdk-cpp.])
+  AC_DEFINE_UNQUOTED([AWS_VERSION_PATCH], $(echo "$aws_version" | cut -d. -f3), [Patch version of aws-sdk-cpp.])
 fi
 
 
@@ -309,9 +309,9 @@ fi
 test "$prefix" = NONE && prefix=$ac_default_prefix
 test "$exec_prefix" = NONE && exec_prefix='${prefix}'
 for name in $ac_subst_vars; do
-    declare $name="$(eval echo "${!name}")"
-    declare $name="$(eval echo "${!name}")"
-    declare $name="$(eval echo "${!name}")"
+    eval $name=\"$(eval echo "\${$name}")\"
+    eval $name=\"$(eval echo "\${$name}")\"
+    eval $name=\"$(eval echo "\${$name}")\"
 done
 
 rm -f Makefile.config
